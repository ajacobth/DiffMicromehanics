Waiting for JIT...
Using 1 devices for parallel training.
Epoch 1/10000, Num Batches: 8152
Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=3/1)>
jax.errors.SimplifiedTraceback: For simplicity, JAX has removed its internal frames from the traceback of the following exception. Set JAX_TRACEBACK_FILTERING=off to include these.
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "/Users/akshayjacobthomas/Documents/GitHub/DiffMicromehanics/surrogate/main.py", line 40, in <module>
    app.run(main)
  File "/Users/akshayjacobthomas/anaconda3/envs/jax_trial/lib/python3.9/site-packages/absl/app.py", line 308, in run
    _run_main(main, args)
  File "/Users/akshayjacobthomas/anaconda3/envs/jax_trial/lib/python3.9/site-packages/absl/app.py", line 254, in _run_main
    sys.exit(main(argv))
  File "/Users/akshayjacobthomas/Documents/GitHub/DiffMicromehanics/surrogate/main.py", line 32, in main
    train.train_and_evaluate(FLAGS.config, FLAGS.workdir)
  File "/Users/akshayjacobthomas/Documents/GitHub/DiffMicromehanics/surrogate/train.py", line 103, in train_and_evaluate
    log_dict = evaluator(state, batch)
  File "/Users/akshayjacobthomas/Documents/GitHub/DiffMicromehanics/surrogate/models.py", line 59, in __call__
    self.log_dict = super().__call__(state,  batch, *args)
  File "/Users/akshayjacobthomas/Documents/GitHub/DiffMicromehanics/surrogate/NN_surrogate/evaluator.py", line 41, in __call__
    self.log_losses(params, batch,*args)
  File "/Users/akshayjacobthomas/Documents/GitHub/DiffMicromehanics/surrogate/NN_surrogate/evaluator.py", line 16, in log_losses
    losses = self.model.losses(params,batch, *args)
  File "/Users/akshayjacobthomas/Documents/GitHub/DiffMicromehanics/surrogate/models.py", line 37, in losses
    batched_residuals = vmap(self.residual, in_axes=(None, 0, 0))(params, x, y_actual)
  File "/Users/akshayjacobthomas/Documents/GitHub/DiffMicromehanics/surrogate/models.py", line 29, in residual
    y_pred = self.u_net(params, x)
  File "/Users/akshayjacobthomas/Documents/GitHub/DiffMicromehanics/surrogate/models.py", line 25, in u_net
    u = self.state.apply_fn(params, x)
  File "/Users/akshayjacobthomas/Documents/GitHub/DiffMicromehanics/surrogate/NN_surrogate/archs.py", line 83, in __call__
    x = Dense(features=dim)(x)
  File "/Users/akshayjacobthomas/Documents/GitHub/DiffMicromehanics/surrogate/NN_surrogate/archs.py", line 55, in __call__
    kernel = self.param(
flax.errors.ScopeParamShapeError: Initializer expected to generate shape (3, 128) but got shape (15, 128) instead for parameter "kernel" in "/Dense_0". (https://flax.readthedocs.io/en/latest/api_reference/flax.errors.html#flax.errors.ScopeParamShapeError)